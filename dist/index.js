import { launch } from "puppeteer";
// import { DateTime } from "luxon"
import axios from "axios";
import "dotenv/config";
import chalk from "chalk";
import { now } from "./helpers/now";
// helpers
// export const now = (): string => {
// 	const now = DateTime.now().toObject()
// 	return `[${now.hour}:${now.minute}:${now.second}]`
// }
// environment
const BASE_URL = "https://lichess.org";
const USER_STATUS_ENDPOINT = `${BASE_URL}/api/users/status`;
const getUserStatus = async (user) => {
    const endpoint = `${USER_STATUS_ENDPOINT}?ids=${user}&withGameIds=true`;
    const res = await axios.get(endpoint);
    return res.data[0];
};
const getActiveGame = async (user) => {
    const userStatus = await getUserStatus(user);
    return userStatus?.playingId;
};
const login = async (page) => {
    const user = process.env.LICHESS_USERNAME;
    const password = process.env.LICHESS_PASSWORD;
    console.log(now(), `attempting to log in as: ${chalk.cyan(user)}`);
    try {
        // fill in form
        await page.goto("https://lichess.org/login?referrer=/");
        await page.type("#form3-username", user);
        await page.type("#form3-password", password);
        await page.click("button.submit");
        await page.waitForNavigation();
        console.log(now(), chalk.green("success!"));
        return true;
    }
    catch (e) {
        // fail
        console.error(now(), chalk.red(`failed: ${e}`));
        return false;
    }
};
const spectateGame = async (page, gameId) => {
    await page.goto(`https://lichess.org/${gameId}`, {
        waitUntil: "networkidle2",
    });
    console.log(now(), chalk.yellow("spectating :)"));
    return;
};
const run = async (user) => {
    const browser = await launch({ headless: true });
    const page = await browser.newPage();
    // log in to lichess
    const loggedIn = await login(page);
    if (!loggedIn)
        return;
    // check if user is playing
    let lastGameId;
    const checker = await setInterval(async () => {
        // get gameId
        let gameId = await getActiveGame(user);
        if (gameId && gameId !== lastGameId) {
            lastGameId = gameId;
            console.log();
            console.log(now(), chalk.yellow(`${user} is playing!`));
            console.log(now(), "attempting to spectate");
            await spectateGame(page, gameId);
        }
        else if (!gameId) {
            console.log(now(), `${user} is not playing any game yet`);
        }
    }, 6000);
};
const user = process.argv.slice(2).shift();
if (!user) {
    console.error(now(), `${chalk.red("ERROR:")} no user provided`);
}
else {
    run(user);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE1BQU0sRUFBUSxNQUFNLFdBQVcsQ0FBQTtBQUN4QyxtQ0FBbUM7QUFDbkMsT0FBTyxLQUFLLE1BQU0sT0FBTyxDQUFBO0FBQ3pCLE9BQU8sZUFBZSxDQUFBO0FBQ3RCLE9BQU8sS0FBSyxNQUFNLE9BQU8sQ0FBQTtBQUN6QixPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZUFBZSxDQUFBO0FBVW5DLFVBQVU7QUFDVixxQ0FBcUM7QUFDckMseUNBQXlDO0FBQ3pDLHNEQUFzRDtBQUN0RCxJQUFJO0FBRUosY0FBYztBQUNkLE1BQU0sUUFBUSxHQUFHLHFCQUFxQixDQUFBO0FBQ3RDLE1BQU0sb0JBQW9CLEdBQUcsR0FBRyxRQUFRLG1CQUFtQixDQUFBO0FBRTNELE1BQU0sYUFBYSxHQUFHLEtBQUssRUFBRSxJQUFZLEVBQXdCLEVBQUU7SUFDbEUsTUFBTSxRQUFRLEdBQUcsR0FBRyxvQkFBb0IsUUFBUSxJQUFJLG1CQUFtQixDQUFBO0lBQ3ZFLE1BQU0sR0FBRyxHQUFHLE1BQU0sS0FBSyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQTtJQUNyQyxPQUFPLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUE7QUFDbkIsQ0FBQyxDQUFBO0FBRUQsTUFBTSxhQUFhLEdBQUcsS0FBSyxFQUFFLElBQVksRUFBK0IsRUFBRTtJQUN6RSxNQUFNLFVBQVUsR0FBRyxNQUFNLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUM1QyxPQUFPLFVBQVUsRUFBRSxTQUFTLENBQUE7QUFDN0IsQ0FBQyxDQUFBO0FBRUQsTUFBTSxLQUFLLEdBQUcsS0FBSyxFQUFFLElBQVUsRUFBb0IsRUFBRTtJQUNwRCxNQUFNLElBQUksR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGdCQUFnQixDQUFBO0lBQ3pDLE1B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